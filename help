#https://pub.dev/packages/get
flutter pub add get




#https://firebase.google.com/docs/flutter/setup?platform=ios
Step 1: Install the required command line tools
1. install the Firebase CLI.
    npm install -g firebase-tools

2. Log into Firebase using your Google account by running the following command:
    firebase login

3. Install the FlutterFire CLI by running the following command from any directory:
    dart pub global activate flutterfire_cli

Step 2: Configure your apps to use Firebase
    flutterfire configure

Step 3: Initialize Firebase in your app
1.
    flutter pub add firebase_core
    flutter pub add firebase_auth
    flutter pub add firebase_storage
    flutter pub add cloud_firestore


3. From your Flutter project directory, run the following command to ensure that your Flutter app's Firebase configuration is up-to-date:
    flutterfire configure

4. In your lib/main.dart file, import the Firebase core plugin and the configuration file you generated earlier:
      import 'package:firebase_core/firebase_core.dart';
      import 'firebase_options.dart';

5. Also in your lib/main.dart file, initialize Firebase using the DefaultFirebaseOptions object exported by the configuration file:
     await Firebase.initializeApp(
       options: DefaultFirebaseOptions.currentPlatform,
     );


https://pub.dev/packages/google_sign_in/install
flutter pub add google_sign_in
    NOTE:
    IOS: add the CFBundleURLTypes attributes below into the [my_project]/ios/Runner/Info.plist file
            <!-- Put me in the [my_project]/ios/Runner/Info.plist file -->
            <!-- Google Sign-in Section -->
            <key>CFBundleURLTypes</key>
            <array>
            	<dict>
            		<key>CFBundleTypeRole</key>
            		<string>Editor</string>
            		<key>CFBundleURLSchemes</key>
            		<array>
            			<!-- TODO Replace this value: -->
            			<!-- Copied from GoogleService-Info.plist key REVERSED_CLIENT_ID -->
            			<string>com.googleusercontent.apps.861823949799-vc35cprkp249096uujjn0vvnmcvjppkn</string>
            		</array>
            	</dict>
            </array>
            <!-- End of the Google Sign-in Section -->

    ANDROID: need to add 'SHA certificate fingerprints' to your Firebase project.
            1. Run the following command to get the SHA-1 fingerprint:
                keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android
            2. In the Firebase console, open the Settings page, then select the 'SHA certificate fingerprints' card.
            3. Click Add fingerprint.
            4. Enter the SHA-1 fingerprint you just retrieved and click Save.
            5. download google-services.json file and place it inside the [my_project]/android/app directory of your Flutter app.




#https://pub.dev/packages/image_picker
flutter pub add image_picker
    -> NOTE:
        -IOS: we need to add the following keys to your Info.plist file
            - NSPhotoLibraryUsageDescription - describe why your app needs permission for the photo library. This is called Privacy - Photo Library Usage Description in the visual editor.
            - NSCameraUsageDescription - describe why your app needs access to the camera. This is called Privacy - Camera Usage Description in the visual editor.
            - NSMicrophoneUsageDescription - describe why your app needs access to the microphone, if you intend to record videos. This is called Privacy - Microphone Usage Description in the visual editor.
        -Android: No configuration required


#https://pub.dev/packages/video_player
flutter pub add video_player
     -> NOTE:
            -IOS: If you need to access videos using http (rather than https) URLs
                <key>NSAppTransportSecurity</key>
                 <dict>
                      <key>NSAllowsArbitraryLoads</key>
                     <true/>
                 </dict>
            -Android: If you are using network-based videos, ensure that the following permission is present in your Android Manifest file
                <uses-permission android:name="android.permission.INTERNET"/>


#https://pub.dev/packages/video_compress/install
flutter pub add video_compress

#https://pub.dev/packages/uuid/install
flutter pub add uuid

#https://pub.dev/packages/cached_network_image
flutter pub add cached_network_image


#https://pub.dev/packages/flutter_launcher_icons/install
flutter pub add flutter_launcher_icons
    config pubspec.yaml
    flutter pub get
    flutter pub run flutter_launcher_icons